/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-06-28 18:56:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.*;
import java.lang.*;

public final class Search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.text.ParseException");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<LINK href=\"styles.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<SCRIPT LANGUAGE=\"JavaScript\">\r\n");
      out.write("\r\n");
      out.write("	function setAction(URL,Obj){\r\n");
      out.write("		var f = document.forms[0];\r\n");
      out.write("		var Route = f.Route;\r\n");
      out.write("		var Fare = document.getElementsByName(\"Fare\");\r\n");
      out.write("		var Departure = document.getElementsByName(\"Departure\");\r\n");
      out.write("		var Arrival = document.getElementsByName(\"Arrival\");\r\n");
      out.write("		var Travels = document.getElementsByName(\"Travels\");\r\n");
      out.write("		var sFlag = false;\r\n");
      out.write("		if(Route.length==null){\r\n");
      out.write("			if(Route.checked==true){\r\n");
      out.write("				V = Route.value;\r\n");
      out.write("				Fare = f.Fare.value;\r\n");
      out.write("				Departure = f.Departure.value;\r\n");
      out.write("				Arrival = f.Arrival.value;\r\n");
      out.write("				Travels = f.Travels.value;\r\n");
      out.write("				sFlag = true;\r\n");
      out.write("			}else{\r\n");
      out.write("				sFlag = false;\r\n");
      out.write("			}\r\n");
      out.write("		}else{\r\n");
      out.write("			for(i=0;i<Route.length;i++){\r\n");
      out.write("				if(Route[i].checked==true){\r\n");
      out.write("					V = Route[i].value;\r\n");
      out.write("					Fare = Fare[i].value;\r\n");
      out.write("					Departure = f.Departure[i].value;\r\n");
      out.write("					Arrival = f.Arrival[i].value;\r\n");
      out.write("					Travels = f.Travels[i].value;\r\n");
      out.write("					sFlag = true;\r\n");
      out.write("					break;\r\n");
      out.write("				}else{\r\n");
      out.write("					sFlag = false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		if(sFlag==true){\r\n");
      out.write("			var ParamsList = \"?RouteSelected=\"+V+\"&Fare=\"+Fare+\"&Departure=\"+Departure+\"&Arrival=\"+Arrival+\"&Travels=\"+Travels;\r\n");
      out.write("			Obj.target='tgt';\r\n");
      out.write("			Obj.href=URL+ParamsList;\r\n");
      out.write("		}else{\r\n");
      out.write("			alert(\"Please select a route to book ticket\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("//-->\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("<head>\r\n");
      out.write("<body Class='SC'>\r\n");
      out.write("<HR>\r\n");
      out.write("<B><FONT COLOR=\"#CC00CC\" face='verdana'>Select Bus</FONT></B>\r\n");
      out.write("<HR>\r\n");
      out.write("<BR><BR>\r\n");
      out.write("<FORM ACTION=\"BookNow_S1.jsp\" method = \"Post\">\r\n");
      out.write("<TABLE class='notepad' align='center'>\r\n");
      out.write("\r\n");
      out.write("\r\n");


/*Declaration of variables*/

Connection con=null;
Statement stmt=null;
ResultSet rs=null;
System.out.println("The search function is called ");
String rFrom = request.getParameter("From");		session.setAttribute("rFrom",rFrom);
System.out.println("from date is " + rFrom);
String rTo = request.getParameter("To");			session.setAttribute("rTo",rTo);
System.out.println("to date is " + rTo);
String JDate = request.getParameter("JDate");	
System.out.println("Called JDate");

session.setAttribute("JDate",JDate);

System.out.println(" date is " + JDate);



String dateStr = JDate;
System.out.println("Date is " + dateStr);  
SimpleDateFormat formater = new SimpleDateFormat("MM/dd/yyyy");
Date result = formater.parse(dateStr);
SimpleDateFormat AppDateFormat = new SimpleDateFormat("yyyy-MM-dd");
System.out.println(AppDateFormat.format(result));
String fromattedate = AppDateFormat.format(result);
System.out.println("The formatted date is " + fromattedate);
System.out.println(" The converted date is " +result);

/* DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
Date date1 = df.parse(JDate);
DateFormat outputFormatter1 = new SimpleDateFormat("yyyy-MM-dd");
String output1 = outputFormatter1.format(date1);
  SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
  Date result = formater.parse(dateStr);
  SimpleDateFormat AppDateFormat = new SimpleDateFormat("dd-MM-yyyy");
  out.println(AppDateFormat.format(result)); */




String sBusType = request.getParameter("BusType");	session.setAttribute("BusType",sBusType);
String BusTypeCondition="";
if(sBusType.equals("Any")){
	BusTypeCondition="'AC','Non AC','Sleeper'";
}else{
	BusTypeCondition="'"+sBusType+"'";
}

System.out.println("The bus type is "+ BusTypeCondition);
String NoPass = request.getParameter("NoPass");		session.setAttribute("NoPass",NoPass);
System.out.println("The NoPass " + NoPass);
//System.out.println("From = "+From+"\t"+"To = "+To+"JDate = "+JDate+"\t"+"BusType = "+BusType+"NoPass = "+NoPass);

try
{
	/*Connection to MySQL database is made with JDBC class one driver*/
	
	con = com.ewheelz.ConnectionPool.getConnection();
	stmt = con.createStatement(
             ResultSet.TYPE_SCROLL_INSENSITIVE,
             ResultSet.CONCUR_UPDATABLE);
	/*stmt =  con.createStatement();*/
	/*String Qry = "select a.RouteId,b.Travels,b.AgentName,b.PhoneNumber,c.BusType,c.BusNumber,a.Fare,a.Departure,a.Arrival,a.TravelsId,a.BusId from routemaster a left join travelsmaster b on (a.TravelsId=b.TravelsId )left join busmaster c on (a.BusId=c.BusId)";*/
	String Qry="SELECT a.RouteId, b.Travels, b.AgentName, b.PhoneNumber, c.BusType, c.BusNumber, a.Fare, " +
            "a.Departure, a.Arrival, a.TravelsId, a.BusId FROM routemaster a " +
            "LEFT JOIN travelsmaster b ON (a.TravelsId = b.TravelsId) " +
            "LEFT JOIN busmaster c ON (a.BusId = c.BusId AND c.BusType IN (" + BusTypeCondition + ")) " +
            "WHERE a.rFrom = '" + rFrom + "' AND a.rTo = '" + rTo + "' AND a.JDate = '" + fromattedate + "' AND " +
            "a.Availability >= " + NoPass;

	
	//String Qry = "select a.RouteId,b.Travels,b.AgentName,b.PhoneNumber,c.BusType,c.BusNumber,a.Fare,a.Departure,a.Arrival,a.TravelsId,a.BusId from routemaster a left join travelsmaster b on (a.TravelsId=b.TravelsId ) left join busmaster c on (a.BusId=c.BusId and c.BusType in ("+BusTypeCondition+")) where  a.rFrom='"+rFrom+"' and a.rTo='"+rTo+"' and a.JDate='"+fromattedate+"' and a.Availability >= "+NoPass;
	/*String Qry = "select a.RouteId,b.Travels,b.AgentName,b.PhoneNumber,c.BusType,c.BusNumber,a.Fare,a.Departure,a.Arrival,a.TravelsId,a.BusId from routemaster a left join travelsmaster b on (a.TravelsId=b.TravelsId ) left join busmaster c on (a.BusId=c.BusId and c.BusType in ("+BusTypeCondition+")) where  a.rFrom=' "+Hyderabad+"' and a.rTo='"+Bangalore+"' and a.JDate='2008-11-27' and a.Availability >= "+NoPass;*/

    System.out.println("Search Qry->"+Qry);
	rs = stmt.executeQuery(Qry);
	int count=0,NumRows=0;
	while(rs.next()){NumRows++;}
	rs.beforeFirst();
	if(NumRows>0){
		//Display header
		
      out.write("\r\n");
      out.write("			<TR class=\"row_title\">\r\n");
      out.write("				<TD>Select</TD>\r\n");
      out.write("				<TD>Route Id</TD>\r\n");
      out.write("				<TD>Travels</TD>\r\n");
      out.write("				<TD>Agent Name</TD>\r\n");
      out.write("				<TD>Phone number</TD>\r\n");
      out.write("				<TD>Bus Type</TD>\r\n");
      out.write("				<TD>Bus Number</TD>\r\n");
      out.write("				<TD>Fare</TD>\r\n");
      out.write("				<TD>Departure</TD>\r\n");
      out.write("				<TD>Arrival</TD>\r\n");
      out.write("			</TR>	\r\n");
      out.write("		");

		while(rs.next())
			{
					//Display body
					String RouteId=rs.getString(1);
					String Travels=rs.getString(2);
					String AgentName=rs.getString(3);
					String PhoneNumber=rs.getString(4);
					String BusType=rs.getString(5);
					String BusNumber=rs.getString(6);
					String Fare=rs.getString(7);
					String Departure=rs.getString(8);
					String Arrival=rs.getString(9);
					String TravelsId=rs.getString(10);
					String BusId=rs.getString(11);
					
      out.write("\r\n");
      out.write("						<TR class=\"");
      out.print((count%2==0)? "row_odd" : "row_even" );
      out.write("\" >\r\n");
      out.write("							<TD><INPUT TYPE=\"radio\" NAME=\"Route\" Value=\"");
      out.print(RouteId);
      out.write('_');
      out.print(TravelsId);
      out.write('_');
      out.print(BusId);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(RouteId);
      out.write("</TD>\r\n");
      out.write("							<TD>");
      out.print(Travels);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"Travels\" value=\"");
      out.print(Travels);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(AgentName);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"AgentName\" value=\"");
      out.print(AgentName);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(PhoneNumber);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"PhoneNumber\" value=\"");
      out.print(PhoneNumber);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(BusType);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"BusType\" value=\"");
      out.print(BusType);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(BusNumber);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"BusNumber\" value=\"");
      out.print(BusNumber);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(Fare);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"Fare\" value=\"");
      out.print(Fare);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(Departure);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"Departure\" value=\"");
      out.print(Departure);
      out.write("\"></TD>\r\n");
      out.write("							<TD>");
      out.print(Arrival);
      out.write("<INPUT TYPE=\"hidden\" NAME=\"Arrival\" value=\"");
      out.print(Arrival);
      out.write("\"></TD>\r\n");
      out.write("						</TR>\r\n");
      out.write("					");

				count++;
			}
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("					</TABLE>\r\n");
      out.write("					<P align=right>\r\n");
      out.write("					<input type=\"submit\", value = \"Book Now\"/>\r\n");
      out.write("					<!-- 	<A onclick=\"setAction('BookNow_S1.jsp',this)\" target=\"ResultFrame\"><IMG SRC=\"Images/Menu/BookNow1.jpg\" border=\"0\"\r\n");
      out.write("						onmouseout=\"this.src = 'Images/Menu/BookNow1.jpg'\" \r\n");
      out.write("						onmouseover=\"this.src = 'Images/Menu/BookNow2.jpg'\"></A> -->\r\n");
      out.write("					</P>\r\n");
      out.write("			");

	}else{
		
      out.write("\r\n");
      out.write("			<P align=\"center\"><IMG SRC=\"Images/error.gif\" WIDTH=\"17\" HEIGHT=\"13\" BORDER=\"0\" ALT=\"\"><FONT COLOR=\"red\" face='Georgia'>No Busses available.Please refine your search and try again</FONT><BR>\r\n");
      out.write("			</P>\r\n");
      out.write("		");

	}
	System.out.println(count+" routes found");
}
catch(Exception e)
{
	System.out.println("Exception"+e);
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</FORM>\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
