/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-06-28 18:57:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import com.ewheelz.MyFunctions;

public final class AddRoute2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.ewheelz.MyFunctions");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<meta http-equiv=\"Content-Language\" content=\"en-us\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\"\r\n");
      out.write("	content=\"text/html; charset=windows-1252\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/demos/style.css\">\r\n");
      out.write("\r\n");
      out.write("<script LANGUAGE=\"Javascript\" SRC=\"Images/validate.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<LINK href=\"styles.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\"#datepicker\").datepicker();\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("<script LANGUAGE=\"Javascript\" SRC=\"Images/calender.js\"></script>\r\n");
      out.write("<script LANGUAGE=\"Javascript\">\r\n");
      out.write("	function ChkMandatoryField(F, T) {\r\n");
      out.write("		var val = F.value;\r\n");
      out.write("		if (val == \"\") {\r\n");
      out.write("			alert(T + \" is mandatory\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function ChkNumField(F, T) {\r\n");
      out.write("		var val = F.value;\r\n");
      out.write("		if (isNaN(val) == true || val == \"\") {\r\n");
      out.write("			alert(\"Please enter numbers for \" + T);\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function ChkAlphaNumericField(F, T) {\r\n");
      out.write("		var val = F.value;\r\n");
      out.write("		var pattern = /^([a-zA-Z0-9]{1,250})$/;\r\n");
      out.write("		if (!(pattern.test(val) == true)) {\r\n");
      out.write("			alert(\"Please enter alphabets or numbers for \" + T);\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function ChkAlphaField(F, T) {\r\n");
      out.write("		var val = F.value;\r\n");
      out.write("		var pattern = /^([a-zA-Z ]{1,250})$/;\r\n");
      out.write("		if (!(pattern.test(val) == true)) {\r\n");
      out.write("			alert(\"Please enter text for \" + T);\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function ChkDateField(F, T) {\r\n");
      out.write("		var val = F.value;\r\n");
      out.write("		var pattern = /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/;\r\n");
      out.write("		if (!(pattern.test(val) == true)) {\r\n");
      out.write("			alert(\"Please enter valid date format (yyyy-mm-dd) for \" + T);\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function ChkDestField(F, T) {\r\n");
      out.write("		var f = document.forms[0];\r\n");
      out.write("		var rFrom = f.rFrom.options[f.rFrom.options.selectedIndex].text;\r\n");
      out.write("		//alert(rFrom);\r\n");
      out.write("\r\n");
      out.write("		var rTo = f.rTo.options[f.rTo.options.selectedIndex].text;\r\n");
      out.write("		//alert(rTo);\r\n");
      out.write("		if (rFrom == rTo) {\r\n");
      out.write("			alert(\"From and To can not be same. Please select different places\");\r\n");
      out.write("			f.rTo.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function ChkJDateField(F, T) {\r\n");
      out.write("		var f = document.forms[0];\r\n");
      out.write("		var JDate = f.JDate.value;\r\n");
      out.write("		//alert(JDate);\r\n");
      out.write("		if (JDate == \"\") {\r\n");
      out.write("			alert(\"Journey date is mandatory\");\r\n");
      out.write("			f.JDate.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (validatePastDate(f.JDate) == false) {\r\n");
      out.write("			alert(\"Past date is not allowed. Please select another date\");\r\n");
      out.write("			f.JDate.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function validate() {\r\n");
      out.write("		var frm = document.forms[0];\r\n");
      out.write("		if (ChkMandatoryField(frm.rFrom, 'From') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.rTo, 'To') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkDestField(frm.rTo, 'To') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.TravelsId, 'Travels Id') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.BusId, 'Bus Id') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.Departure, 'Departure') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (validateTime(frm.Departure) == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.Arrival, 'Arrival') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (validateTime(frm.Arrival) == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.Fare, 'Fare') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkNumField(frm.Fare, 'Fare') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkMandatoryField(frm.JDate, 'Date') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkJDateField(frm.JDate, 'Date') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("		if (ChkDateField(frm.JDate, 'Date') == false)\r\n");
      out.write("			return false;\r\n");
      out.write("	}\r\n");
      out.write("	function fnBusDetails() {\r\n");
      out.write("		alert(\"bus details is called\");\r\n");
      out.write("		var frm = document.forms[0];\r\n");
      out.write("		var TravelsId = frm.TravelsId.value;\r\n");
      out.write("		if (TravelsId == '') {\r\n");
      out.write("			alert(\"Please Enter TravelsId to Proceed\");\r\n");
      out.write("		} else {\r\n");
      out.write("			var URL = \"ShowBuses.jsp?TravelsId=\" + TravelsId;\r\n");
      out.write("			fnEmpPopUp(URL, 300, 400);\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<Body class=SC>\r\n");
      out.write("\r\n");
      out.write("	<HR>\r\n");
      out.write("	<B><FONT COLOR=\"#CC00CC\" face='verdana'>Add Route</FONT></B>\r\n");
      out.write("	<HR>\r\n");
      out.write("	");

	Integer IAuth = (Integer) session.getAttribute("auth");
	int auth = 1;
	if (IAuth != null) {
		auth = IAuth.intValue();
	}
	System.out.println("===Authentication==" + auth);
	auth = 0;
	if (auth != 0) {
	
      out.write("<P align=center>\r\n");
      out.write("		<IMG SRC=\"Images/error.gif\" WIDTH=\"17\" HEIGHT=\"13\" BORDER=\"0\" ALT=\"\"><B><FONT\r\n");
      out.write("			COLOR=\"red\">You are not authorized to access this page</FONT></B>\r\n");
      out.write("	</P>\r\n");
      out.write("	");

	} else {
	
      out.write("\r\n");
      out.write("	<FORM ACTION=\"AddRoute1.jsp\" onsubmit=\"return validate()\">\r\n");
      out.write("		<center>\r\n");
      out.write("			<TABLE BORDER=\"0\" CELLSPACING=\"2\" CELLPADDING=\"2\">\r\n");
      out.write("				<TR class=row_title ALIGN=\"center\">\r\n");
      out.write("					<TH COLSPAN=\"2\">Add New Route</TH>\r\n");
      out.write("				<tr class=\"row_odd\">\r\n");
      out.write("					<td>From</td>\r\n");
      out.write("					<td><input type=\"text\" NAME=\"rFrom\"></input></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"row_even\">\r\n");
      out.write("					<td>To</td>\r\n");
      out.write("					<td><input type=\"text\" NAME=\"rTo\"></input> </SELECT></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"row_odd\">\r\n");
      out.write("					<TD>Travels Id<FONT COLOR=\"red\">*</FONT></TD>\r\n");
      out.write("					<TD><Input type=text name='TravelsId'> <INPUT\r\n");
      out.write("						TYPE=\"Button\" Name=\"GBid\" value=\"...\"\r\n");
      out.write("						Onclick=\"fnEmpPopUp('ShowTravels.jsp',300,400);\">\r\n");
      out.write("				</TR>\r\n");
      out.write("				<tr class=\"row_even\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<TD>Bus Id<FONT COLOR=\"red\">*</FONT></TD>\r\n");
      out.write("					<TD><Input type=text name='BusId' value=''> <INPUT\r\n");
      out.write("						TYPE=\"Button\" Name=\"GBid\" value=\"...\" Onclick=\"fnBusDetails()\">\r\n");
      out.write("				</TR>\r\n");
      out.write("				<tr class=\"row_odd\">\r\n");
      out.write("					<TD>Departure<FONT COLOR=\"red\">*</FONT></TD>\r\n");
      out.write("					<TD><Input type=text name='Departure' value=''>HH:MM</TD>\r\n");
      out.write("				</TR>\r\n");
      out.write("				<tr class=\"row_even\">\r\n");
      out.write("					<TD>Arrival<FONT COLOR=\"red\">*</FONT></TD>\r\n");
      out.write("					<TD><Input type=text name='Arrival' value=''>HH:MM</TD>\r\n");
      out.write("				</TR>\r\n");
      out.write("				<tr class=\"row_odd\">\r\n");
      out.write("					<TD>Fare<FONT COLOR=\"red\">*</FONT></TD>\r\n");
      out.write("					<TD><Input type=text name='Fare' value=''></TD>\r\n");
      out.write("				</TR>\r\n");
      out.write("				<tr class=\"row_even\">\r\n");
      out.write("					<TD>Journey Date<FONT COLOR=\"red\">*</FONT></TD>\r\n");
      out.write("					<td><input type=\"text\" name='JDate' id=\"datepicker\"></td>\r\n");
      out.write("					<!-- <TD><Input type=text name='JDate' value='' readonly><img onkeypress=\"fnCalendar(this)\" id=\"imgDate\" style=\"CURSOR: hand\" onClick=\"fnCalendar(this)\" height=\"16\" src=\"Images/CalDis.gif\" width=\"16\" border=\"0\" name=\"imgDate\" onMouseOver=\"fnEnableCalLookup(this)\" onMouseOut=\"fnDisableCalLookup(this)\" ></TD> -->\r\n");
      out.write("				</TR>\r\n");
      out.write("				<TR>\r\n");
      out.write("					<TH>\r\n");
      out.write("					<TD><INPUT TYPE=\"submit\" value='Submit'></TD>\r\n");
      out.write("					<TH>\r\n");
      out.write("					<TD><INPUT TYPE=\"reset\" value='Clear'></TD>\r\n");
      out.write("				</TR>\r\n");
      out.write("			</TABLE>\r\n");
      out.write("			<H6 align=center>\r\n");
      out.write("				Fields with <FONT SIZE=\"\" COLOR=\"red\">*</FONT> are mandatory\r\n");
      out.write("			</H6>\r\n");
      out.write("\r\n");
      out.write("		</center>\r\n");
      out.write("	</FORM>\r\n");
      out.write("</BODY>\r\n");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
