/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-06-28 18:57:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.Properties;
import java.sql.*;

public final class Feedback_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Properties");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

System.out.println("__________________");

					

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Testimonial</title>\r\n");
      out.write("<LINK href=\"styles.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<script language=javascript>\r\n");
      out.write("function goURL()\r\n");
      out.write("{\r\n");
      out.write("	Msg = document.FeedbackForm.message.value;\r\n");
      out.write("	\r\n");
      out.write("	From = document.FeedbackForm.From.value;\r\n");
      out.write("	if(From==\"\"){\r\n");
      out.write("		alert(\"Please provide your mail id.\");\r\n");
      out.write("		document.FeedbackForm.From.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(Msg==\"\"){\r\n");
      out.write("		alert(\"Feedback is mandatory.\");\r\n");
      out.write("		document.FeedbackForm.message.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(Msg!=\"\" && From!=\"\"){\r\n");
      out.write("		url = \"Feedback.jsp?message=\"+Msg+\"&From=\"+From;\r\n");
      out.write("		//alert(url);\r\n");
      out.write("		var frm = document.FeedbackForm;\r\n");
      out.write("		frm.action = url;\r\n");
      out.write("	}else{\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"SC\" >\r\n");
      out.write("\r\n");



if(request.getMethod().equals("POST")  )
{

      out.write("\r\n");
      out.write("	<h4>Testimonial</h4>\r\n");

  boolean status = false;
  //Updating database
  	Connection con=null;
	Statement stmt=null;
	ResultSet rs=null;
	int result=0;
	try
	{
		/*Getting the connection variable from session*/
		con = com.ewheelz.ConnectionPool.getConnection();
		stmt =  con.createStatement();
		Date DateSubmitted = new Date(System.currentTimeMillis());
		String msg = request.getParameter("message").replace('\'',' ');
		String From = request.getParameter("From");

		String Query = "Insert into Feedback(UserID,Feedback,DateSubmitted) values (\'"+From+"\',\'"+msg+"\',\'"+DateSubmitted+"\')";
		System.out.println(Query);
		result = stmt.executeUpdate(Query);
		System.out.println(result);
		if(result!=0){
			status=true;
		}else{
			status=false;
		}
	}
	catch(Exception e)
	{
		
      out.print(e);

	}


  if (status == true)
  {
     out.println("<P align=center><FONT COLOR='green' face='Georgia'>Your Feedback submitted successfully!<BR> Thanks for providing your feedback.</FONT></P>");
	 
      out.write("<center><A href=\"Feedback.jsp\">&lt;&lt;Back</A></center>");

  }
}
else
{


      out.write("\r\n");
      out.write("\r\n");
      out.write("<h4>Testimonial</h4>\r\n");
      out.write("<P align=left><FONT COLOR=\"black\" Face=\"Georgia\">Please drop us a line!<BR>\r\n");
      out.write("If you have a query, an idea or a suggestion, we would be most happy to listen and will do our best to implement the same</FONT>\r\n");
      out.write("</P>\r\n");
      out.write("<form method=\"POST\" name=\"FeedbackForm\"  onsubmit=\"return goURL()\">\r\n");
      out.write("<table align=left width=\"60%\">\r\n");
      out.write("<tr class=\"row_title\">\r\n");
      out.write("    <td colspan=2>Message</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr class=\"row_odd\">\r\n");
      out.write("    <td><B>Your email Id</B> <FONT COLOR=\"#FF0000\">*</FONT></td>\r\n");
      out.write("    <td><B><INPUT TYPE=\"text\" NAME=\"From\" size=\"50\"></B></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr class=\"row_odd\">\r\n");
      out.write("    <td><B>Feedback</B> <FONT COLOR=\"#FF0000\">*</FONT></td>\r\n");
      out.write("    <td><TEXTAREA name=\"message\" ROWS = \"5\" COLS=\"50\"></TEXTAREA></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr class=\"row_odd\">\r\n");
      out.write("    <td align=center><input type=\"reset\"  name=\"Clear\" Value=\"Clear\" class=\"WinButton\"></td>\r\n");
      out.write("	<td align=center><input type=\"submit\"  name=\"Command\" Value=\"Submit Feedback\"  class=\"WinButton\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
