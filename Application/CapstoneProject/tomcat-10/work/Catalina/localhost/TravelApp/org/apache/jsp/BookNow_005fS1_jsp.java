/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-06-28 22:14:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.lang.*;

public final class BookNow_005fS1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<HTML>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String rFrom = (String)session.getAttribute("rFrom");
	String rTo = (String)session.getAttribute("rTo");
	String JDate = (String)session.getAttribute("JDate");
	String sBusType = (String)session.getAttribute("BusType");
	String NoPass = (String)session.getAttribute("NoPass");


      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<LINK href=\"styles.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<SCRIPT LANGUAGE=\"JavaScript\">\r\n");
      out.write("<!--\r\n");
      out.write("var SCount = 0;\r\n");
      out.write("\r\n");
      out.write("	function setAction(URL,Obj){\r\n");
      out.write("		var f = document.forms[0];\r\n");
      out.write("		var NoSeats = \"");
      out.print(NoPass);
      out.write("\";\r\n");
      out.write("		var BPoint = f.BPoint.value;\r\n");
      out.write("		var SS = f.Seats.value;\r\n");
      out.write("		SS = SS.substring(0,SS.length-1);\r\n");
      out.write("		if(BPoint==\"\"){\r\n");
      out.write("			alert(\"Boarding point is mandatory\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(SS == \"\"||SCount<parseInt(NoSeats)){\r\n");
      out.write("			alert(\"Please select \"+NoSeats+\" seat(s) to continue\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		var ParamsList = \"?BPoint=\"+BPoint+\"&SS=\"+SS;\r\n");
      out.write("		Obj.target='tgt';\r\n");
      out.write("		Obj.href=URL+ParamsList;\r\n");
      out.write("	}\r\n");
      out.write("function toggleSelection(Obj)\r\n");
      out.write("	{\r\n");
      out.write("		var s = Obj.src;\r\n");
      out.write("		var Seats = document.forms[0].Seats;\r\n");
      out.write("		var NoSeats = \"");
      out.print(NoPass);
      out.write("\";\r\n");
      out.write("		\r\n");
      out.write("		if (s.indexOf(\"availableSeat.jpg\")>-1)\r\n");
      out.write("		{\r\n");
      out.write("			if(SCount>=parseInt(NoSeats)){\r\n");
      out.write("				alert(\"Already You have selected the required seats\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			Obj.src = \"Images/selectedSeat.gif\";\r\n");
      out.write("			//alert(\"--\"+Obj.alt);\r\n");
      out.write("			if(Seats.value==\"\"){\r\n");
      out.write("				Seats.value = Obj.alt+\",\";\r\n");
      out.write("			}else{\r\n");
      out.write("				Seats.value += Obj.alt+\",\";\r\n");
      out.write("			}\r\n");
      out.write("			SCount++;\r\n");
      out.write("		}else if (s.indexOf(\"selectedSeat.gif\")>-1)\r\n");
      out.write("		{\r\n");
      out.write("			Obj.src = \"Images/availableSeat.jpg\";\r\n");
      out.write("			Seats.value=Seats.value.replace(Obj.alt+\",\",\"\");\r\n");
      out.write("			SCount--;\r\n");
      out.write("		}else{\r\n");
      out.write("			alert(\"seat already booked\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("//-->\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("<head>\r\n");
      out.write("<body Class='SC'>\r\n");
      out.write("<HR>\r\n");
      out.write("<B><FONT COLOR=\"#CC00CC\" face='verdana'>Seat Selection</FONT></B>\r\n");
      out.write("<HR>\r\n");
      out.write("<BR><BR>\r\n");
      out.write("<form action = \"\" method = \"GET\">\r\n");
      out.write("<!-- <form action = \"BookNow_S2.jsp\" method = \"GET\"> -->\r\n");

/*Declaration of variables*/
Connection con=null;
Statement stmt=null,stmt1=null,stmt2=null;
ResultSet rs=null,rs1=null,rs2=null;
String RouteSelected = request.getParameter("Route");
String Fare = request.getParameter("Fare");
String Departure = request.getParameter("Departure");
session.setAttribute("Departure",Departure);

String Arrival = request.getParameter("Arrival");
session.setAttribute("Arrival",Arrival);

String Travels = request.getParameter("Travels");
session.setAttribute("Travels",Travels);

System.out.println(Fare);
int iNoPass=0,iFare=0;
if(Fare!=null){
	 iFare = Integer.parseInt(Fare);
}
System.out.println(iFare);
if(NoPass!=null){
	 iNoPass = Integer.parseInt(NoPass);
}
System.out.println(iNoPass);
int tFare = iFare*iNoPass;
System.out.println("Total Fare:"+tFare);
session.setAttribute("Fare",tFare+"");
/*session.setAttribute("Fare",tFare);*/

String RouteId = "";
String TravelsId = "";
String BusId = "";
String[] BPoints = new String[100];
int count=0,NumRows=0;
String BookedSeats="";
try
{
	/*Connection to MySQL database is made with JDBC class one driver*/
	System.out.println("Inside database connection section");
	con = com.ewheelz.ConnectionPool.getConnection();
	System.out.println("RouteSelected is "+ RouteSelected);
	String[] Details = com.ewheelz.MyFunctions.MyTokenizer(RouteSelected,"_");
	RouteId = Details[0];	session.setAttribute("RouteId",RouteId);
	System.out.println("RouteID is " + RouteId);
	TravelsId = Details[1];	session.setAttribute("TravelsId",TravelsId);
	System.out.println("RouteID is " + RouteId);
	BusId = Details[2];		session.setAttribute("BusId",BusId);
	System.out.println(RouteId+TravelsId+BusId);
	stmt =  con.createStatement();
	String Qry = "Select distinct PickupPoint from RouteMap where RouteId = '"+RouteId+"'";
	System.out.println("Search Qry->"+Qry);
	rs = stmt.executeQuery(Qry);
	while(rs.next()){	
		BPoints[NumRows] = rs.getString(1);
		System.out.println("BPoints[NumRows]-:"+BPoints[NumRows]);
		NumRows++;
	}
	String Qry1 = "Select Seats from ticketdetails where RouteId='"+RouteId+"' and BusId='"+BusId+"' and CustomerId <> '' and PaymentId <> ''";
	System.out.println(Qry1);
	rs1 = stmt.executeQuery(Qry1);
	while(rs1.next()){
		BookedSeats+=rs1.getString(1);
	}
	System.out.println("Seats already booked"+BookedSeats);
}
catch(Exception e)
{
	System.out.println("Exception"+e);
}

      out.write("\r\n");
      out.write("<H5>Boarding Point</H5>\r\n");
      out.write("Select your Boarding point <FONT COLOR=\"red\">*</FONT>\r\n");
      out.write("<SELECT NAME=\"BPoint\" class=\"ListBox\" value=\"");
      out.print(BPoints[0]);
      out.write("\">\r\n");
      out.write("	");
for(int i=0;i<NumRows;i++){
      out.write("\r\n");
      out.write("		<OPTION>");
      out.print(BPoints[i]);
      out.write("</OPTION>\r\n");
      out.write("	");
}
      out.write("\r\n");
      out.write("</SELECT><BR><BR>\r\n");
      out.write("Choose your seats <FONT COLOR=\"red\">*</FONT>&nbsp;<INPUT TYPE=\"text\" NAME=\"Seats\" class=\"TextField\">\r\n");
      out.write("<BR>\r\n");
      out.write("<FONT COLOR=\"#333399\" size=\"-1\" face='Times new roman'><I>select from the available seats from the layout below</I></FONT>\r\n");
      out.write("<H5>Bus Layout</H5>\r\n");
      out.write("<INPUT TYPE=\"image\" SRC=\"Images/availableSeat.jpg\"></IMG>Available&nbsp;\r\n");
      out.write("<IMG SRC=\"Images/bookedSeat.gif\" WIDTH=\"21\" HEIGHT=\"17\" BORDER=\"0\" ALT=\"\"></IMG>Booked&nbsp;\r\n");
      out.write("<IMG SRC=\"Images/selectedSeat.gif\" WIDTH=\"18\" HEIGHT=\"17\" BORDER=\"0\" ALT=\"\"></IMG>Selected&nbsp;\r\n");
      out.write("<BR><BR>\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("	<SCRIPT LANGUAGE=\"JavaScript\">\r\n");
      out.write("	<!--\r\n");
      out.write("		var BookedSeats = \"");
      out.print(BookedSeats);
      out.write("\";\r\n");
      out.write("		//alert(BookedSeats);\r\n");
      out.write("		for(i=1;i<=10;i++){\r\n");
      out.write("			if(BookedSeats.indexOf(\"A\"+i)>-1){\r\n");
      out.write("			document.writeln(\"<TD><IMG SRC=\\\"Images/bookedSeat.gif\\\" style=\\\"cursor:hand\\\" alt='A\"+i+\"' onclick=\\\"alert('seat already booked');\\\"></TD>\");\r\n");
      out.write("			}else{\r\n");
      out.write("			document.writeln(\"<TD><IMG SRC=\\\"Images/availableSeat.jpg\\\" style=\\\"cursor:hand\\\" alt='A\"+i+\"' onclick='toggleSelection(this)'></TD>\");\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	//-->\r\n");
      out.write("	</SCRIPT>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("	<SCRIPT LANGUAGE=\"JavaScript\">\r\n");
      out.write("	<!--\r\n");
      out.write("		var BookedSeats = \"");
      out.print(BookedSeats);
      out.write("\";\r\n");
      out.write("		//alert(BookedSeats);\r\n");
      out.write("		for(i=1;i<=10;i++){\r\n");
      out.write("			if(BookedSeats.indexOf(\"B\"+i)>-1){\r\n");
      out.write("			document.writeln(\"<TD><IMG SRC=\\\"Images/bookedSeat.gif\\\" style=\\\"cursor:hand\\\" alt='B\"+i+\"' onclick=\\\"alert('seat already booked');\\\"></TD>\");\r\n");
      out.write("			}else{\r\n");
      out.write("			document.writeln(\"<TD><IMG SRC=\\\"Images/availableSeat.jpg\\\" style=\\\"cursor:hand\\\" alt='B\"+i+\"' onclick='toggleSelection(this)'></TD>\");\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	//-->\r\n");
      out.write("	</SCRIPT></TR>\r\n");
      out.write("<TR>\r\n");
      out.write("	<TD colspan=10>&nbsp;</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("	-->\r\n");
      out.write("	</SCRIPT></TR>\r\n");
      out.write("</TABLE>\r\n");
      out.write("<P align=right>\r\n");
      out.write("<A onclick=\"setAction('BookNow_S2.jsp',this)\" target=\"ResultFrame\"><IMG SRC=\"Images/Menu/Continue1.jpg\" border=\"0\"\r\n");
      out.write("	onmouseout=\"this.src = 'Images/Menu/Continue1.jpg'\" \r\n");
      out.write("	onmouseover=\"this.src = 'Images/Menu/Continue2.jpg'\"></A>\r\n");
      out.write("	<!-- <input type=\"submit\" value=\"Continue\" target=\"ResultFrame\"><IMG SRC=\"Images/Menu/Continue1.jpg\" border=\"0\"\r\n");
      out.write("	onmouseout=\"this.src = 'Images/Menu/Continue1.jpg'\" \r\n");
      out.write("	onmouseover=\"this.src = 'Images/Menu/Continue2.jpg'\"> -->\r\n");
      out.write("</P>\r\n");
      out.write("</FORM>\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
