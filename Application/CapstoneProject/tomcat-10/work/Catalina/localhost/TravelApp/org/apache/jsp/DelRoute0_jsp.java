/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-06-28 18:57:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.util.Random;

public final class DelRoute0_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Random");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--Interface Code to prompt condition value from end user-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<HEAD>\r\n");
      out.write("\r\n");
      out.write("	<LINK href=\"styles.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script LANGUAGE=\"Javascript\" SRC=\"Images/validate.js\"></script>\r\n");
      out.write("<script LANGUAGE=\"Javascript\">\r\n");
      out.write("\r\n");
      out.write("function fnShowDetails()\r\n");
      out.write("			{\r\n");
      out.write("	 			alert(\"show details is called\");\r\n");
      out.write("	            var frm = document.forms[0];\r\n");
      out.write("				var RouteId = frm.RouteId.value;\r\n");
      out.write("				\r\n");
      out.write("				if (RouteId=='')\r\n");
      out.write("				{\r\n");
      out.write("					alert(\"Please select RouteId to Proceed\");\r\n");
      out.write("				}else{\r\n");
      out.write("					var URL = \"ShowRoutes.jsp?RouteId=\"+RouteId;\r\n");
      out.write("					alert(\" in else section this is your URL\"+ URL);\r\n");
      out.write("					fnEmpPopUp(URL,300,400);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("	function validate()\r\n");
      out.write("		{\r\n");
      out.write("			var frm = document.forms[0];\r\n");
      out.write("			var RouteId = frm.RouteId.value;\r\n");
      out.write("\r\n");
      out.write("			if (RouteId=='')\r\n");
      out.write("				{\r\n");
      out.write("					alert(\"Please select RouteId to Proceed\");\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			else\r\n");
      out.write("				alert(\"route id is \" + RouteId);\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</HEAD>\r\n");
      out.write("\r\n");
      out.write("<BODY class=SC>\r\n");
      out.write("<HR>\r\n");
      out.write("<B><FONT COLOR=\"#CC00CC\" face='verdana'>Delete Route</FONT></B>\r\n");
      out.write("<HR>\r\n");
      out.write("\r\n");

	Integer IAuth =(Integer)session.getAttribute("auth");
	int auth=-1;
	if(IAuth!=null){ auth= IAuth.intValue();}
	System.out.println("===Authentication=="+auth);
auth=0;
if(auth!=0){
	
      out.write("<P align=center><IMG SRC=\"Images/error.gif\" WIDTH=\"17\" HEIGHT=\"13\" BORDER=\"0\" ALT=\"\"><B><FONT COLOR=\"red\">You are not authorized to access this page</FONT></B></P>");

}
else{

      out.write('	');
      out.write('\r');
      out.write('\n');


	Connection con;
	ResultSet rs=null;
	Statement stmt=null;
	String Condition = "RouteId";
	String[] ConValues = new String[2000];
	int ConCount=0,i=0;
	String Query1="";

      out.write("\r\n");
      out.write("<FORM Name='DelForm' METHOD=POST ACTION=\"DelRoute1.jsp\" onsubmit=\"return validate()\">\r\n");
      out.write("			<CENTER><B><FONT face=\"verdana\"> Select a route to delete from database </FONT></B></CENTER><BR><BR>\r\n");
      out.write("		 <center>\r\n");
      out.write("   <TABLE BORDER=\"0\" CELLSPACING=\"2\"  CELLPADDING=\"2\" >\r\n");
      out.write("	<TR class=row_title ALIGN=\"center\"> <TH COLSPAN=\"2\"> Delete Route</TH>\r\n");
      out.write("		<TR class=row_odd>\r\n");
      out.write("			<TH>");
      out.print(Condition.replace('`',' ').toUpperCase());
      out.write("</TH>\r\n");
      out.write("			<TD><SELECT NAME=\"");
      out.print(Condition);
      out.write("\">\r\n");
      out.write("			<OPTION Value=\"\">Select</OPTION>\r\n");
      out.write("\r\n");

	try{
			
			con = com.ewheelz.ConnectionPool.getConnection();
			stmt =  con.createStatement();

			if(Condition.trim().equalsIgnoreCase("undefined")){
				System.out.println("in if");
				Query1 = "Select * from routemaster";
			}
			else{
				System.out.println("in else");
				Query1 = "Select "+Condition+" from routemaster";
			}
			String str="";
			System.out.println(Query1);
			rs = stmt.executeQuery(Query1);
			int rCount=0;
				while(rs.next()){
					String x = rs.getString(1);
					ConValues[i]=x;
					
      out.write("<OPTION Value=");
      out.print(ConValues[i]);
      out.write('>');
      out.print(ConValues[i]);
      out.write("</OPTION>");

					i++;
				}
		}catch(Exception e){
      out.print(e);
}

      out.write("\r\n");
      out.write("		</SELECT></TD>\r\n");
      out.write("		</TR>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<TR class =row_odd><TD align=center><Input type='Submit' name='submit' value='Delete'></TD>\r\n");
      out.write("		<TD align=center><input type=\"button\" id='Item' value=\"ShowDetails\" onclick=\"fnShowDetails()\" ></input></TD>\r\n");
      out.write("		</TR>\r\n");
      out.write("		</TABLE>\r\n");
      out.write("</FORM>\r\n");
      out.write("</BODY>\r\n");

}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
